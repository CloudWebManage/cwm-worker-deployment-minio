{{ if .Values.minio.metricsLogger.enable }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: minio-logger
spec:
  podSelector:
    matchLabels:
      app: minio-logger
  policyTypes:
  - Ingress
  {{- if or (not $.Values.minio.metricsLogger.withRedis) (eq $.Values.minio.metricsLogger.LOG_PROVIDER "elasticsearch") (eq $.Values.minio.metricsLogger.LOG_PROVIDER "s3") }}
  - Egress
  {{- end }}
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: minio
    ports:
    - protocol: TCP
      port: 8500
  {{- if or (not $.Values.minio.metricsLogger.withRedis) (eq $.Values.minio.metricsLogger.LOG_PROVIDER "elasticsearch") (eq $.Values.minio.metricsLogger.LOG_PROVIDER "s3") }}
  egress:
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
    ports:
    - protocol: UDP
      port: 53
    {{- if not $.Values.minio.metricsLogger.withRedis }}
    - protocol: TCP
      port: {{ $.Values.minio.metricsLogger.REDIS_PORT }}
    {{- end }}
    {{- if (eq $.Values.minio.metricsLogger.LOG_PROVIDER "elasticsearch") }}
    - protocol: TCP
      port: {{ $.Values.minio.metricsLogger.ES_PORT }}
    {{- else if (eq $.Values.minio.metricsLogger.LOG_PROVIDER "s3") }}
    {{- if $.Values.minio.metricsLogger.S3_NON_AWS_TARGET }}
    - protocol: TCP
      port: {{ (split ":" $.Values.minio.metricsLogger.S3_ENDPOINT)._2 }}
    {{- else }}
    - protocol: TCP
      port: 443
    {{- end }}
    {{- end }}
  {{- end }}
{{ end }}
