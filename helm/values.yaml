minio:
  replicas: 1
  revisionHistoryLimit: 2
  terminationGracePeriodSeconds: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  nodeSelector: ""
  # tolerations: []
  createPullSecret: ""
  imagePullSecrets: |
    - name: github
  image: docker.pkg.github.com/cloudwebmanage/cwm-worker-deployment-minio/minio
  tag: ""
  imagePullPolicy: IfNotPresent
  auditWebhookEndpoint: "http://minio-logger:8500/logs"
  skipWaitForAuditWebhook: false
  MINIO_GATEWAY_DEPLOYMENT_ID: "minio1"
  MINIO_EXTRA_ARGS: ""
  initDebugEnable: false
  initCurlMaxTime: "1.5"
  # this exposes prometheus metrics unauthenticated at /minio/v2/metrics/cluster and /minio/v2/metrics/node
  enablePrometheusAuthTypePublic: true
  # it requires prometheus operator version 0.45 (kube-prometheus-stack 13.13)
  enableServiceMonitors: false

  # to enable gateway instance, set INSTANCE_TYPE to one of gateway_s3 / gateway_gcs / gateway_azure
  INSTANCE_TYPE: ""
  # when using gateway instance you need to also set appropriate ports to open in network policy
  # this is only used if INSTANCE_TYPE value is provided
  gatewayNetworkPolicyExtraEgressPorts: [ 443 ]
  # when INSTANCE_TYPE is enabled the following values should also be provided depending on the gateway type:
  #   for gateway_s3: GATEWAY_ARGS should be the URL of the source s3 endpoint (or keep empty to use AWS S3)
  #                   AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY are the credentials for the source instance
  #   for gateway_gcs: GATEWAY_ARGS should be the google project id
  #                    GOOGLE_APPLICATION_CREDENTIALS should contain the google credentials (as a yaml map)
  #   for gateway_azure: AZURE_STORAGE_ACCOUNT_NAME / AZURE_STORAGE_ACCOUNT_KEY should be set
  GATEWAY_ARGS: ""
  AWS_ACCESS_KEY_ID: ""
  AWS_SECRET_ACCESS_KEY: ""
  GOOGLE_APPLICATION_CREDENTIALS: {}
  AZURE_STORAGE_ACCOUNT_NAME: ""
  AZURE_STORAGE_ACCOUNT_KEY: ""

  startupProbe:
    path: /minio/health/live
    initialDelaySeconds: 1
    periodSeconds: 1
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 2
    curlMaxTimeSeconds: "0.9"
    curlConnectTimeoutSeconds: "0.2"
  livenessProbe:
    path: /minio/health/live
    initialDelaySeconds: 1
    periodSeconds: 1
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 2
    curlMaxTimeSeconds: "0.9"
    curlConnectTimeoutSeconds: "0.2"
  readinessProbe:
    path: /minio/health/ready
    initialDelaySeconds: 1
    periodSeconds: 1
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 2
    curlMaxTimeSeconds: "0.9"
    curlConnectTimeoutSeconds: "0.2"
  resources:
    requests:
      cpu: "50m"
      memory: "200Mi"
    limits:
      memory: "200Mi"
  cache:
    enabled: true
    drives: "/cache"
    exclude: "*.pdf"
    quota: 80
    after: 3
    watermark_low: 70
    watermark_high: 90
  browser: true
  access_key: "dummykey"
  secret_key: "dummypass"
  storageVolumeSubPath: ""
  cacheVolumeSubPath: ""
  volumes:
    storage: null
    cache: null

  externalscaler:
    enabled: false
    image: docker.pkg.github.com/cwm-keda-external-scaler/iamazeem/cwm-keda-external-scaler
    imagePullPolicy: IfNotPresent
    resources:
      requests:
        cpu: "20m"
        memory: "64Mi"
      limits:
        memory: "150Mi"

  # External: https://github.com/iamazeem/cwm-keda-external-scaler
  # CPU: https://keda.sh/docs/2.3/scalers/cpu/
  # Memory: https://keda.sh/docs/2.3/scalers/memory/
  scaledobject:
    enabled: false
    type: external          # external, cpu, memory
    # external
    pollingInterval: 10
    cooldownPeriod:  60
    minReplicaCount: 1
    maxReplicaCount: 10
    # advanced:
    #   restoreToOriginalReplicaCount: true
    #   horizontalPodAutoscalerConfig:
    #     behavior:
    #       scaleDown:
    #         stabilizationWindowSeconds: 30
    #         policies:
    #         - type: Percent
    #           value: 80
    #           periodSeconds: 15
    isActiveTtlSeconds: "60"
    scalePeriodSeconds: "60"
    scaleMetricName: "num_requests_misc"
    targetValue: "10"
    # cpu / memory
    metricType: Utilization # Utilization, Value, AverageValue
    metricValue: "80"

  metricsLogger:
    enable: true
    image: docker.pkg.github.com/cloudwebmanage/cwm-worker-logger/cwm-worker-logger
    imagePullPolicy: IfNotPresent
    resources:
      requests:
        cpu: "20m"
        memory: "64Mi"
      limits:
        memory: "150Mi"
    withRedis: true
    LOG_PROVIDER: default
    # LOG_PROVIDER: stdout
    LOG_LEVEL: info           # fatal, error, warn, info, debug, trace

    # Redis configuration
    REDIS_HOST: minio-logger
    REDIS_PORT: 6379
    REDIS_DB: 0
    UPDATE_GRACE_PERIOD_SECONDS: 300s
    DEPLOYMENT_API_METRICS_FLUSH_INTERVAL_SECONDS: 300s
    REDIS_KEY_PREFIX_DEPLOYMENT_LAST_ACTION: deploymentid:last_action
    REDIS_KEY_PREFIX_DEPLOYMENT_API_METRIC: deploymentid:minio-metrics

    # Logs buffering/flushing configuration
    LOGS_FLUSH_COMPRESSION: gzip
    LOGS_FLUSH_AT_SHUTDOWN: true
    LOGS_FLUSH_INTERVAL: 60s
    LOGS_FLUSH_RETRY_WAIT: 20s

    # LOG_PROVIDER: elasticsearch
    ES_HOST: 0.0.0.0
    ES_PORT: 9200
    ES_SCHEME: http
    ES_MULTIPLE_HOSTS_ENABLED: false
    ES_HOSTS: '0.0.0.0:9200'
    ES_SSL_VERIFY: true
    ES_AUTH_ENABLED: false
    ES_USERNAME: dummykey
    ES_PASSWORD: dummypass
    ES_INDEX_NAME: test
    ES_TYPE_NAME: _doc
    ES_PATH: /logs            # NOTE: The index must already exist! DO NOT add a trailing slash!

    # LOG_PROVIDER: s3
    AWS_KEY_ID: dummykey
    AWS_SECRET_KEY: dummypass
    S3_BUCKET: test123
    S3_REGION: us-east-1
    S3_PATH: logs/
    S3_NON_AWS_TARGET: false
    S3_ENDPOINT: http://localhost:8080
    S3_SSL_VERIFY: true
    S3_STORE_AS: gzip         # gzip, lzo, json, txt

    # External: https://github.com/iamazeem/cwm-keda-external-scaler
    # CPU: https://keda.sh/docs/2.3/scalers/cpu/
    # Memory: https://keda.sh/docs/2.3/scalers/memory/
    scaledobject:
      enabled: false
      type: external          # external, cpu, memory
      # external
      pollingInterval: 10
      cooldownPeriod:  60
      minReplicaCount: 1
      maxReplicaCount: 10
      # advanced:
      #   restoreToOriginalReplicaCount: true
      #   horizontalPodAutoscalerConfig:
      #     behavior:
      #       scaleDown:
      #         stabilizationWindowSeconds: 30
      #         policies:
      #         - type: Percent
      #           value: 80
      #           periodSeconds: 15
      isActiveTtlSeconds: "60"
      scalePeriodSeconds: "60"
      scaleMetricName: "num_requests_misc"
      targetValue: "10"
      # cpu / memory
      metricType: Utilization # Utilization, Value, AverageValue
      metricValue: "80"

  nginx:
    replicas: 1
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 1
    image: docker.pkg.github.com/cloudwebmanage/cwm-worker-deployment-minio/minio-nginx
    tag: ""
    resources:
      requests:
        cpu: "25m"
        memory: "50Mi"
      limits:
        memory: "150Mi"
    hostnames:
      - id: "1"
        name: example001.com
        cc_token: "p70xAjo7b7lLMi-Y4tgixcE55POuVQh1dWqitJMyoxM"
        cc_payload: "p70xAjo7b7lLMi-Y4tgixcE55POuVQh1dWqitJMyoxM.hqI2tvoKxfy5mN1hvTLZwkt4o0WXwYv1uZFrvvr_sXM"
      - id: "2"
        name: example002.com
        pem: |
          -----BEGIN CERTIFICATE-----
          MIIDnTCCAoWgAwIBAgIUA+zBqFfYSKNFAuaH5G1JrD1AfrUwDQYJKoZIhvcNAQEL
          BQAwXjELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoM
          GEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZDEXMBUGA1UEAwwOZXhhbXBsZTAwMi5j
          b20wHhcNMjEwNDI1MDYyNTAyWhcNMjIwNDI1MDYyNTAyWjBeMQswCQYDVQQGEwJB
          VTETMBEGA1UECAwKU29tZS1TdGF0ZTEhMB8GA1UECgwYSW50ZXJuZXQgV2lkZ2l0
          cyBQdHkgTHRkMRcwFQYDVQQDDA5leGFtcGxlMDAyLmNvbTCCASIwDQYJKoZIhvcN
          AQEBBQADggEPADCCAQoCggEBAMFl6FqTuTtKBEFoWAy9heQsiqepgZxPQ1vb7tPw
          dzUHEh5EvqKhxqCq9QAbvm5hlqFPcyfNE8VC62IhlZaL2FpxZ7Rz21Z1n5v6xfTK
          BKsHFkMAM67ylbfsRAClbnhjx10rcLZg7FTIIOP1nxO6qoFCJ9HgDzXj/47d+3Xs
          ETECbrPji9WNq30Ty/vHdcOmTTTCFP/mko+7IIdQb3AuHTuPgO4w8Yn5tzwZcOtw
          gEpaWLFO+vZDUp3FnL79J8FFtBSntID8jZik38G1F3LUfZgmikBO4GrfZXQBU42E
          h1mM39/EPocMDPPhkWuWAZaEBfLqqWzqMmez25vpIvtV0aUCAwEAAaNTMFEwHQYD
          VR0OBBYEFFlVjP905/cO7Pm6VRUftIaQEqgZMB8GA1UdIwQYMBaAFFlVjP905/cO
          7Pm6VRUftIaQEqgZMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEB
          AKqV/SseJd7ecKuhZF26L7qA76+WBt/YkFJ147a17RXDPa7I5Itoi1OF0+KPNJs8
          Zkr13pqPjdw6WB5yYRTXGGy1FQiDA4R/BhmS2XjZodQqRevzNJxode+lf4PI3XK6
          IOBH0f2slbFIn8A4ipflnw5+VVwVhOhBRU180q33fPh3ni12v6MyqBz3npTPWoqZ
          RhyXuhFFijdqErZvoF9cXhPniQQvgK+Vx6j/HGSqLSnFEGzOj1YJVAJ7MD+q1jxu
          CS9FHfejx4u/oN7ze10XzYW5b7DsGycp+fnn0TPqqSowuSUJl/5CpsfNCNixX4Qj
          eqWVGgboqabA6q5hGafOgPk=
          -----END CERTIFICATE-----
        key: |
          -----BEGIN PRIVATE KEY-----
          MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQDBZehak7k7SgRB
          aFgMvYXkLIqnqYGcT0Nb2+7T8Hc1BxIeRL6iocagqvUAG75uYZahT3MnzRPFQuti
          IZWWi9hacWe0c9tWdZ+b+sX0ygSrBxZDADOu8pW37EQApW54Y8ddK3C2YOxUyCDj
          9Z8TuqqBQifR4A814/+O3ft17BExAm6z44vVjat9E8v7x3XDpk00whT/5pKPuyCH
          UG9wLh07j4DuMPGJ+bc8GXDrcIBKWlixTvr2Q1KdxZy+/SfBRbQUp7SA/I2YpN/B
          tRdy1H2YJopATuBq32V0AVONhIdZjN/fxD6HDAzz4ZFrlgGWhAXy6qls6jJns9ub
          6SL7VdGlAgMBAAECggEAUfXcOLauI4BEuWt9FTkkiwSNZmyhrxqwUzeryUn5WxG6
          DfXYTJf+04xf9EHNvH3DFm3TQaTZohmwI5BUEs8FS58P8hu/cq66i6IFTq5muAxy
          1MY7IQNRi/anAxcY8BBpJwUH6WK+BVgjCDjJx9St+cWNlpY8G/yaC3Pr45e92WSO
          nFUmgLzBnuGtHMMeHgE97bAmbkeilMilkrrQ9G2sKk3udUK90oiAIB6eP3JtG8rl
          UcxS1B77UdWOTAi90B6Pc9s6KulQ73n0vI8hjGIVBfj34npEiT/tqQCD95nzxGRB
          +LSUkbXJxR2ds5fhodjZ+QoVJ1zUZx1MD6QHeFPK6QKBgQD6NQ2K8fFzygy6PNia
          UVqCOEcyjqfOb9kwqYmP3V+WKgw3u243Ht/IRYNJfPFiDi20lLRjKzExMMN3MV3J
          9rV0l5OTBCfig068pBA5QqzXqL1zInTzRnBXsBu2MCl+hSTST/Ct6k9X5MfBLMSX
          hXllhsxQP6E8AEgy7aDR27KEzwKBgQDF4CdnDd5zD9Ch3N5ZqD3IhqCjJxnaL9Et
          PZPQCkZm2Fi2sDJIqmu9XmJnrN9qM57oBJ+2QupRM1ZRQ+SzML4Ug4+ydI7zTWyp
          hFzASrQ3floMjwmpkNx9tZvLQ/jW9hFQtbkB6HZ6AUMeHro2YPNdLJx0/+r3lZVU
          GDmKZXTHSwKBgFOXO+IKuLcNbrkdsOPFgC53LNooLMncNjx6t5mXxOJ/Q7uu48CI
          kQzwpE797grrX7uv3qAvAu1DNFpy5Lmfsbm1FjmMruKPKdP+H+lxbBtUpY58mYPZ
          KZkyHd/9MS+yvb2BtY/08vMTXOUd1sQkdI1Fvqaky3InSfexygOymW6jAoGAG7bQ
          bfugS2dMpk8ECXSp6psIhrFkSo3l8zsrp7i4sZDdpAC7mjfcTTKZ/8FTrVE7kW2M
          XP+0R9kz3r/umTZbeQ4QI0N1/he6/2cdgoU0Bo242Qdzp/81EppMDsUfZiQiurYp
          Cl5fsajZmK9fD1y22Tb1VuG9LB4UQyn9bSfWmk8CgYA7kqUaSp4E4P2tTJqfgM9Y
          y4YPsvsgbgE9REx22urZGvckkCT+Rkd4m38BBvnkWChfCEDyMtFiai/SBJ+A15IF
          YPLZWrfjq7Z2dGlcZyhJ1SoLYnfX5iPOf+TwE5+wCmlSda1HfiWgHFCTdAZrpYqu
          BDhxYQnRXIDemidN0HgOfw==
          -----END PRIVATE KEY-----
        cc_token: "x70xAjo7b7lLMi-Y4tgixcE55POuVQh1dWqitJMyoxM"
        cc_payload: "x70xAjo7b7lLMi-Y4tgixcE55POuVQh1dWqitJMyoxM.hqI2tvoKxfy5mN1hvTLZwkt4o0WXwYv1uZFrvvr_sXM"
      - id: "3"
        name: "example003.com"
        pem: |
          -----BEGIN CERTIFICATE-----
          MIIDnTCCAoWgAwIBAgIUP4BcN7e6BMB7Tw3Fo2ARjoFjNGUwDQYJKoZIhvcNAQEL
          BQAwXjELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoM
          GEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZDEXMBUGA1UEAwwOZXhhbXBsZTAwMy5j
          b20wHhcNMjEwNDI1MDYyNTIxWhcNMjIwNDI1MDYyNTIxWjBeMQswCQYDVQQGEwJB
          VTETMBEGA1UECAwKU29tZS1TdGF0ZTEhMB8GA1UECgwYSW50ZXJuZXQgV2lkZ2l0
          cyBQdHkgTHRkMRcwFQYDVQQDDA5leGFtcGxlMDAzLmNvbTCCASIwDQYJKoZIhvcN
          AQEBBQADggEPADCCAQoCggEBAMDFaKv7PG6bUFLJkLww7XwD8xi4g0j48A4+fMyx
          EklxfmWALQEJDwFT3fRgp98no3TynLby/rMxSKeE0srmj8TpU2Oy4Ybx9vYz39lP
          UH1EdR9PLnKavR19nmSVfUbPOo0cQl1XbxnTFQrgc/pQJ/zdl+lRQTOIEqZ1Is1D
          1VrWK0rnFWk890+t7ToSe/B9wVgGzpVR4CsV0DPtmT9A1LLDClyef+5fXGVzwFJD
          Lms1SGbsXn59udQiduttBWr48htlnSPJqXww5+KwowLOXVBBd5xq1NIVjkT7Vn2f
          EkRrs69RmzoHR3tAGCAhO0eXfsKFHyHDm2Iqi0MfLZi/RNkCAwEAAaNTMFEwHQYD
          VR0OBBYEFAnCDtjRjx+jSUxx/x+gP0N0C+u+MB8GA1UdIwQYMBaAFAnCDtjRjx+j
          SUxx/x+gP0N0C+u+MA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEB
          ABhU4tbEfFSNb0yRhXUQ+A0HFoVcRTPJNVxQPTgNfc1JYD/cu2KvPXAHubnO/g9s
          ADCHKnGYTMH3+hI6JkfZgqgYdHqD7czAGGGI73/S3nxEwYnHFTfGb9rQi3b0EAu+
          pW4uKp8Kd+JeqJlSyBa5qKXzYGy/SLeBi0LIcNDhLEzmVpvED1hJZJFnhMeT6nK4
          3s4714KosylDEzdBokI2jR6fBbCsANvk8D1A5vZHzJzfxRWAKZGcrkXpiMucSBSa
          uGdRE9Deich3FTKEwWtCHSjgtsPB2LlCUHVaCbTqw5hyi/yzw3z7k87834DLPfUa
          VMRiIckOeX+wX01oCUpc8vY=
          -----END CERTIFICATE-----
        key: |
          -----BEGIN PRIVATE KEY-----
          MIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQDAxWir+zxum1BS
          yZC8MO18A/MYuINI+PAOPnzMsRJJcX5lgC0BCQ8BU930YKffJ6N08py28v6zMUin
          hNLK5o/E6VNjsuGG8fb2M9/ZT1B9RHUfTy5ymr0dfZ5klX1GzzqNHEJdV28Z0xUK
          4HP6UCf83ZfpUUEziBKmdSLNQ9Va1itK5xVpPPdPre06EnvwfcFYBs6VUeArFdAz
          7Zk/QNSywwpcnn/uX1xlc8BSQy5rNUhm7F5+fbnUInbrbQVq+PIbZZ0jyal8MOfi
          sKMCzl1QQXecatTSFY5E+1Z9nxJEa7OvUZs6B0d7QBggITtHl37ChR8hw5tiKotD
          Hy2Yv0TZAgMBAAECggEBAItaKaCprbYHcLloHMjuVb8g28szFzTZQDAL3AvctWuC
          L+0QC3iEI+TBy+GtPa2D6hXQjJl0b8r6BZuT2Q30PloKkc2wsnfq0qyIM3nUbEsi
          AcjwZJNUaQG4nZf4uOdHRvxbQV5Ypmf0v3FtcGmzKDUTu41ev9OQumq6or3gG4vd
          pZM0DUe761bN3N2cVFvAl5+1BG+ZE8lDS0BXyrx7HCnrw8HL39sax85GjZnZosbb
          aHICmfC15T8RFeJTbctCpTyfIWi05lIwsVasfhzRAG1FFa5csb8o2pUl5hCIs6Fu
          TQv8zk9/XBdJZDQfzlN8W+OQ/sbCW9T87YJ0iV+8MAECgYEA4hck64gRFkcfzeC/
          dIbfbXELz46PUUW0zLcPVT4fIiw5zLcJNa4bqjnmtQByN6vgCzrlCrxZsg2t1zeC
          7gAKI2RqAqXpPLIkva+beCyIoNmLzprXxznDBYpuvK1+ldQnVP3gPT69F4tAvsxK
          qFE99mMiV9prf7w7cw3lW1mKBKECgYEA2kXcyjGzKwawmV1WkCTx08Vd4YUARTjF
          oCDynBTP8tKTXm1jTw4Pzk5m8Fe+ImfZFw7rVj9rEOmyJ5he5QUrlZIKvoCF0q8f
          FHV+XCdfxlRFE60BoaHco+MYV3crRU99RFrCaIyjFtQ3DUIt4fdqe1FliEu/UvDu
          edJOxDe+HTkCgYEAlwI4Yay/JO8aegs8NVuETffsmJQye2kgin9WmWvlpZB+hpJW
          b2k8ByWnR4vlvfNpsHaE1vfYvQlP7GiiZc7W9q6x89TXBPhDfAKXx9uO4kiLjdJ0
          fxfAf6nnrtP+sZpDLwxmwuFtsRUMiKOw1d11kmTCYoV7uZSC7KUCZVJX0iECgYEA
          pnMqSQKXiBMk7v9PuMKDq6PR0N209BS0GEWn3UC9x4Wvng268pldkk0VkOjIdMJO
          uZfF/VKFWjNsiWdXzjwgHYJuMRIfeyfSgq6KusnH7p1qw/Nl0BV4BX5znJei5ssU
          UuEHaeT9pbYVeUXjaXNcv0e2Lrbc4uoaYcnwCRAdKXkCgYA9RBoTT04m491KtC32
          eIYuW5uN7VTGsMMl0YpxksSnkUVXxCLZN29+Yenk6zfoyEfQttMtMvO9vInwD+UB
          4UPwsg+SqwY8YNN5sBHotFMjdp3W2bmiXIqEgq880NPzdihwFiT3N+kZm/g8XWiE
          J8N7SZILaDxONvOjzwnGGc2acw==
          -----END PRIVATE KEY-----
        cc_token: ""
        cc_payload: ""
    DISABLE_HTTP: false
    DISABLE_HTTPS: false
    CDN_CACHE_ENABLE: false
    CDN_CACHE_PROXY_PATH: "/var/cache/nginx/minio/cache"
    CDN_CACHE_PROXY_KEYS_MAX_SIZE: "10m"
    CDN_CACHE_PROXY_MAX_SIZE: "1g"
    CDN_CACHE_PROXY_INACTIVE: "1m"
    CDN_CACHE_PROXY_TEMP_PATH: "/var/cache/nginx/minio/temp"
    CDN_CACHE_PROXY_BUFFERS: "8 16k"
    CDN_CACHE_PROXY_BUFFER_SIZE: "16k"
    CDN_CACHE_PROXY_BUSY_BUFFERS_SIZE: "32k"
    CDN_CACHE_PROXY_CACHE_VALID_200: "1m"
    CDN_CACHE_NOCACHE_REGEX: '\.(pdf|txt|json)$'
    cacheVolumeSubPath: "_cdncache_"
    cacheVolumeMountPath: "/var/cache/nginx/minio"

    # External: https://github.com/iamazeem/cwm-keda-external-scaler
    # CPU: https://keda.sh/docs/2.3/scalers/cpu/
    # Memory: https://keda.sh/docs/2.3/scalers/memory/
    scaledobject:
      enabled: false
      type: external          # external, cpu, memory
      # external
      pollingInterval: 10
      cooldownPeriod:  60
      minReplicaCount: 1
      maxReplicaCount: 10
      # advanced:
      #   restoreToOriginalReplicaCount: true
      #   horizontalPodAutoscalerConfig:
      #     behavior:
      #       scaleDown:
      #         stabilizationWindowSeconds: 30
      #         policies:
      #         - type: Percent
      #           value: 80
      #           periodSeconds: 15
      isActiveTtlSeconds: "60"
      scalePeriodSeconds: "60"
      scaleMetricName: "num_requests_misc"
      targetValue: "10"
      # cpu / memory
      metricType: Utilization # Utilization, Value, AverageValue
      metricValue: "80"

# each object have required attributes: apiVersion, kind, name, spec
extraObjects: []
