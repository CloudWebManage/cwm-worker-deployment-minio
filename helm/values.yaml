minio:
  enabledProtocols: ["http", "https"]
  serveSingleProtocolPerPod: false
  # replicas if serveSingleProtocolPerPod is false
  replicas: 1
  # replicas if serveSingleProtocolPerPod is true
  httpReplicas: 1
  httpsReplicas: 1
  revisionHistoryLimit: 2
  terminationGracePeriodSeconds: 5
  strategy: |
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  nodeSelector: ""
  # tolerations: []
  createPullSecret: ""
  imagePullSecrets: |
    - name: github
  image: docker.pkg.github.com/cloudwebmanage/cwm-worker-deployment-minio/minio
  tag: ""
  imagePullPolicy: IfNotPresent
  auditWebhookEndpoint: "http://localhost:8500/logs"
  skipWaitForAuditWebhook: false
  MINIO_GATEWAY_DEPLOYMENT_ID: "minio1"
  MINIO_EXTRA_ARGS: ""
  initDebugEnable: false
  # this exposes prometheus metrics unauthenticated at /minio/v2/metrics/cluster and /minio/v2/metrics/node
  enablePrometheusAuthTypePublic: true
  startupProbe:
    path: /minio/health/live
    initialDelaySeconds: 0
    periodSeconds: 1
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5
  livenessProbe:
    path: /minio/health/live
    initialDelaySeconds: 0
    periodSeconds: 1
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 2
  readinessProbe:
    path: /minio/health/ready
    initialDelaySeconds: 0
    periodSeconds: 1
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 2
  httpResources:
    requests:
      cpu: "50m"
      memory: "200Mi"
    limits:
      memory: "200Mi"
  httpsResources:
    requests:
      cpu: "100m"
      memory: "300Mi"
    limits:
      memory: "300Mi"
  cache:
    enabled: true
    drives: "/cache"
    exclude: "*.pdf"
    quota: 80
    after: 3
    watermark_low: 70
    watermark_high: 90
  domain_name: "example007.com"
  access_key: "dummykey"
  secret_key: "dummypass"
  certificate_pem: "-----BEGIN CERTIFICATE-----\nMIIDCTCCAfGgAwIBAgIUebacs5jlDI2Wy4EXGcvXu6x7e9AwDQYJKoZIhvcNAQEL\nBQAwFDESMBAGA1UEAwwJbG9jYWxob3N0MB4XDTIwMDEyMTEwMTU0OFoXDTIyMTEx\nMDEwMTU0OFowFDESMBAGA1UEAwwJbG9jYWxob3N0MIIBIjANBgkqhkiG9w0BAQEF\nAAOCAQ8AMIIBCgKCAQEA0CMe/fuMrIRwalCnVGeZVAY/LEItoKD1FJcG2UGd3AUO\nDGlxFtd5xBTyfc3+tvscZSbqOOrT2XuEUeGzmIiuDx9k9k28KeMxRYf5tB5rdKm8\nFokuuczXqowDfanDmbu4QhTrHM1IX2FFSoRlQq4e/N1TP9Nm5eUqSH44ONavCJM5\n857QoScv82ot7oaZ6Sqaweau5wrxTTBAyTRrQ+OKMyMgUs8fpRON+oBbgEpDAeXk\nNxe9ck8IBqrnH8tQJbv1dfDr5a9Boa0DCrjHO/VHDVh/GzU7FoQW9B640EOJXCSj\n3xZpJAwgNXrF8gX7kBGQWjFNqltubbRFxUAQS3ULyQIDAQABo1MwUTAdBgNVHQ4E\nFgQUFf9QJ016QGvtEKN83Em8scdS/1owHwYDVR0jBBgwFoAUFf9QJ016QGvtEKN8\n3Em8scdS/1owDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEATd1z\nKkMxN58FbNkS4aHPVaKxb4fhIer5yhBRpdBHXl6AWyDaTLr0uAVH9CSyYAzETGGV\nAX4CdwCkHRq1DuXcn8vWzt2BBY6E4x9x/7TyeXtzj38R5nW9OOf5UTtK4e/3M/KA\ngAUEyBeTPwPnCxEPTvd1WFktQyHgCth6msPdAjFRf75u2vT5zAnQbREjsRnp6kpZ\nYXxAJDCwhAKrAoPeBRc5XAqPGB9oYp/8filHTj8CpErid6JWpSvFw+6JrEDg/pVe\nf/G7niVrMtyeermVLca3WeZPQ5NReMXmJ3pOg2MXDKcy4E4pvkM6oQmYbtKsPAvx\n64hRJtzD6RCaFmQ1FQ==\n-----END CERTIFICATE-----"
  certificate_key: "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDQIx79+4yshHBq\nUKdUZ5lUBj8sQi2goPUUlwbZQZ3cBQ4MaXEW13nEFPJ9zf62+xxlJuo46tPZe4RR\n4bOYiK4PH2T2Tbwp4zFFh/m0Hmt0qbwWiS65zNeqjAN9qcOZu7hCFOsczUhfYUVK\nhGVCrh783VM/02bl5SpIfjg41q8IkznzntChJy/zai3uhpnpKprB5q7nCvFNMEDJ\nNGtD44ozIyBSzx+lE436gFuASkMB5eQ3F71yTwgGqucfy1Alu/V18Ovlr0GhrQMK\nuMc79UcNWH8bNTsWhBb0HrjQQ4lcJKPfFmkkDCA1esXyBfuQEZBaMU2qW25ttEXF\nQBBLdQvJAgMBAAECggEAJXZs2aIxS8v6v+gMdjC/dFQ7gqfWtpbCBha48NnSpAt0\n398Kr+XQ0O5ER0iQlDbWgY5jkiMSRo7o3iQVw1q2mZo4/ew39gIimDVFSJpBFRqH\n9DZ05pRsLRJOfovT3RPgsmQ5fVGluSU055i08S+N/E2J8m8GklKRLcMqM3DQyGYE\nFK792nVarXJqo16tlkeO1ZChNy4oRLrdvpRK5FDsnX9Tuy/DTYFL+0u3ck+4XtgH\nZuEaOUwEmS8W8lQgE4B7Q8Zv0gdtLTw9XQuUmyFCEy3+dODG1IhzKqx1ldVEA2Yc\nKXlGO3rPbbdicDkqU1RIV0kI+d9+OzznhnCtv2zRQQKBgQD8rg9dD2OK+ZkW81Yp\nyLfWa6Vl8dfiCLkb8uumecr9OrBMLqEgfJMIZnOtzE9zxq5vSTHEYbtbMlqTd67I\n0ovVSIWdl9AEl2iNTk8Ha09fGjnlMjsFUe+80U0gHCwLytIaVeAsSZ3j0XJVNNE0\nvLh/TfY1AgITvDTGuWrOBtHXLQKBgQDS3zuJ70ZasXslnPkIdLcPv+nO0lDY3L9Q\nuyfWDR3TaCxQIw/oIFQ3hiqnq1EgV5gzPQ6plRXvNlP4TYC9rO+9eExpHjrtExdZ\nfsIVyLU+v9BZyFqTDyoEeXZawkQ+cWrac3p53RlcPP6gqo0BlagoJfu4Ur6+uZcM\nYrl50tyojQKBgERU4ey9q6K6qw7M0YFNOYHv7HOsOkBzMXQAdn+3shBXHbQMbCB3\n7982rZPTi6z4jtWjiqTb9SnNbTcyB39hiNUt3oxmsKd9NpX4FmEgQP+r/PohYlqm\n9NkwFNZZKAQsXjMnBA+V/O/OBUhLl0PWwWIT+EAPgfZKUE9pdxuuNnMlAoGBAJHA\nPjTer7AsEEQ1NWQE2CsIqSCM+diK66lvUt9+fWkMDeTt9yaogc1G7OCrZw2Fvetc\nfm/0Xg7TbEKpvxxbFfHN3nKhtHT8xxzSom/QJIZUqjwEYaZXyuEA2y9sKyNF3WdU\nfgkRK2A3wH9oosG/oVTuvAfxGWpWePLUogJ0HpRZAoGAXDdcofIrP/IW4xjCbwBk\nqJJr4WDAeSvqscXRZb6DEsWwmvzMMI5RYwAkwOPm5MMJpXTjfUtS3Y3LjYWczlww\nN+vbIMyCeQDsgnJKJyQU6mhqw9RUUD4cmD9BgTJDlgLcVMUu3eLLrAOdjSOUfxCx\nhlQZj4ZBcZWwbF1E1VmH84g=\n-----END PRIVATE KEY-----"
  volumes:
    storage: |
      emptyDir: {}
    cache: |
      emptyDir: {}
  service:
    enabled: true
  #  autoscaler if serveSingleProtocolPerPod=false
  autoscaler:
    enabled: true
    minReplicas: 1
    maxReplicas: 10
    metrics: |
      - type: Resource
        resource:
          name: cpu
          target:
            averageValue: 150m
            type: AverageValue
  # autoscaler if serveSingleProtocolPerPod=true
  httpAutoscaler:
    enabled: true
    minReplicas: 1
    maxReplicas: 10
    metrics: |
      - type: Resource
        resource:
          name: cpu
          target:
            averageValue: 150m
            type: AverageValue
  # autoscaler if serveSingleProtocolPerPod=true
  httpsAutoscaler:
    enabled: true
    minReplicas: 1
    maxReplicas: 10
    metrics: |
      - type: Resource
        resource:
          name: cpu
          target:
            averageValue: 150m
            type: AverageValue
  metricsLogger:
    enable: true
    image: docker.pkg.github.com/cloudwebmanage/cwm-worker-logger/cwm-worker-logger
    imagePullPolicy: IfNotPresent
    resources:
      requests:
        cpu: "20m"
        memory: "64Mi"
      limits:
        memory: "150Mi"
    withRedis: true
    LOG_LEVEL: info   # fatal, error, warn, info, debug, trace
    # CWM_HTTP_HOST: localhost
    # CWM_HTTP_PORT: 8500
    REDIS_HOST: localhost
    REDIS_PORT: 6379
    UPDATE_GRACE_PERIOD_SECONDS: 300s
    DEPLOYMENT_API_METRICS_FLUSH_INTERVAL_SECONDS: 300s
    REDIS_KEY_PREFIX_DEPLOYMENT_LAST_ACTION: deploymentid:last_action
    REDIS_KEY_PREFIX_DEPLOYMENT_API_METRIC: deploymentid:minio-metrics

    # LOG_PROVIDER: elasticsearch
    # ES_HOST:
    # ES_PORT:

    # LOG_PROVIDER: s3
    # AWS_KEY_ID:
    # AWS_SECRET_KEY:
    # S3_BUCKET_NAME:
    # S3_REGION:

# each object have required attributes: apiVersion, kind, name, spec
extraObjects: []
