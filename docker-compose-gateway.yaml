version: '3.4'

services:

  minio-source:
    image: minio
    restart: on-failure
    build: .
    environment:
      MINIO_DOMAIN: "example001.com"
      MINIO_ROOT_USER: "accesskey"
      MINIO_ROOT_PASSWORD: "secretkey"

  nginx-source:
    image: nginx
    restart: on-failure
    build: nginx
    environment:
      HOSTNAMES_DIR: "/hostnames"
      CDN_CACHE_ENABLE: "yes"
      MINIO_PROXY_PASS_HOST: minio-source
    ports:
      - "8080:8080"
    volumes:
      - "./tests/hostnames:/hostnames"
    depends_on:
      - minio-source

  minio-gateway:
    image: minio
    restart: on-failure
    build: .
    environment:
      MINIO_ROOT_USER: "12345678"
      MINIO_ROOT_PASSWORD: "12345678"
      INSTANCE_TYPE: gateway_s3
      GATEWAY_ARGS: "http://nginx-source:8080"
      AWS_ACCESS_KEY_ID: accesskey
      AWS_SECRET_ACCESS_KEY: secretkey
      MINIO_AUDIT_WEBHOOK_ENABLE_target1: "on"
      MINIO_AUDIT_WEBHOOK_AUTH_TOKEN_target1: ""
      MINIO_AUDIT_WEBHOOK_ENDPOINT_target1: http://cwm-worker-logger:8500/logs
      CWM_METRICSLOGGER_HEALTH_URL: http://cwm-worker-logger:8500/health
      MINIO_GATEWAY_DEPLOYMENT_ID: "docker-compose-http"
      MINIO_API_SELECT_PARQUET: "${MINIO_API_SELECT_PARQUET}"
    depends_on:
      - nginx-source
      - cwm-worker-logger

  nginx-gateway:
    image: nginx
    restart: on-failure
    build: nginx
    environment:
      HOSTNAMES_DIR: "/hostnames"
      CDN_CACHE_ENABLE: "yes"
      MINIO_PROXY_PASS_HOST: minio-gateway
    ports:
      - "8082:8080"
    volumes:
      - "./tests/hostnames:/hostnames"
    depends_on:
      - minio-gateway

  cwm-worker-logger:
    image: ghcr.io/cloudwebmanage/cwm-worker-logger/cwm-worker-logger:latest
    ports:
      - "8500:8500"
    environment:
      LOG_PROVIDER: default
      LOG_LEVEL: debug
      REDIS_HOST: redis
      UPDATE_GRACE_PERIOD_SECONDS: 5s
      DEPLOYMENT_API_METRICS_FLUSH_INTERVAL_SECONDS: 5s
    depends_on:
      - redis

  redis:
    image: redis:6
    ports:
      - "6379:6379"
