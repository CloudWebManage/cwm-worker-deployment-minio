proxy_cache minio;

# Important Notice! If you modify any of the values, modify them in `init.sh` as
# well, they are used for `sed` replacing

# Buffering is required to enable cache
proxy_buffering on;

# Sets the number and size of the buffers used for reading a response from the
# proxied server, for a single connection.
proxy_buffers 8 16k;

# Sets the size of the buffer used for reading the first part of the response
# received from the proxied server. This part usually contains a small response
# header.
proxy_buffer_size 16k;

# When buffering of responses from the proxied server is enabled, limits the
# total size of buffers that can be busy sending a response to the client while
# the response is not yet fully read. In the meantime, the rest of the buffers
# can be used for reading the response and, if needed, buffering part of the
# response to a temporary file.
proxy_busy_buffers_size 32k;

proxy_cache_valid 200 1m;

# the following lines are required to fix handling of HEAD requests by minio
proxy_cache_convert_head off;
proxy_cache_key  "$request_method$request_uri$is_args$args";
proxy_cache_methods GET HEAD;

include cache_location_proxy_ext_nocache.conf;
proxy_no_cache $is_args $http_authorization $http_x_amz_content_sha256;
proxy_cache_bypass $is_args $http_authorization $http_x_amz_content_sha256;
if ($request_uri ~ minio/health) {set $nocache 1;}
proxy_no_cache $nocache;
proxy_cache_bypass $nocache;

# when caching is enabled some headers are not passed, we need to explicitly pass them
proxy_set_header If-Match $http_if_match;
proxy_set_header Range $http_range;

add_header X-Cache-Status $upstream_cache_status;
