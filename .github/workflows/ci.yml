name: CI
on:
  push:
    paths-ignore:
      - '**.md'

jobs:
  ci:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PACKAGES_READER_GITHUB_TOKEN: ${{ secrets.PACKAGES_READER_GITHUB_TOKEN }}
        PACKAGES_READER_GITHUB_USER: ${{ secrets.PACKAGES_READER_GITHUB_USER }}
        CWM_WORKER_HELM_DEPLOY_KEY: ${{ secrets.CWM_WORKER_HELM_DEPLOY_KEY }}
      run: |
        if git log -1 --pretty=format:"%s" | grep -- --skip-tests; then
          SKIP_TESTS=yes
        else
          SKIP_TESTS=no
        fi &&\
        if git log -1 --pretty=format:"%s" | grep -- --no-deploy; then
          NO_DEPLOY=yes
        else
          NO_DEPLOY=no
        fi &&\
        sudo bin/install_helm.sh && helm version &&\
        if [ "${SKIP_TESTS}" == "no" ]; then
          sudo bin/install_minikube.sh && minikube version &&\
          sudo bin/install_kubectl.sh && kubectl version --client &&\
          sudo bin/install_python.sh &&\
          sudo bin/install_warp.sh &&\
          python3 -m venv venv &&\
          venv/bin/python -m pip install --upgrade pip &&\
          venv/bin/python -m pip install --upgrade setuptools wheel &&\
          venv/bin/python -m pip install -r tests/requirements.txt
        fi &&\
        bin/docker_login.sh &&\
        bin/docker_build.sh &&\
        if [ "${SKIP_TESTS}" == "no" ]; then
          docker-compose up -d &&\
          venv/bin/pytest tests/test_docker_compose.py &&\
          docker-compose down -v
        fi &&\
        docker tag minio docker.pkg.github.com/cloudwebmanage/cwm-worker-deployment-minio/minio:$GITHUB_SHA &&\
        docker tag nginx docker.pkg.github.com/cloudwebmanage/cwm-worker-deployment-minio/minio-nginx:$GITHUB_SHA &&\
        docker push docker.pkg.github.com/cloudwebmanage/cwm-worker-deployment-minio/minio:$GITHUB_SHA &&\
        docker push docker.pkg.github.com/cloudwebmanage/cwm-worker-deployment-minio/minio-nginx:$GITHUB_SHA &&\
        sed -i "s/appVersion: latest/appVersion: ${GITHUB_SHA}/g" helm/Chart.yaml &&\
        bin/update_logger_image.sh && \
        if [ "${SKIP_TESTS}" == "no" ]; then
          bin/minikube_start.sh &&\
          venv/bin/pytest -vvv tests/test_k8s.py
        fi &&\
        if [ "${GITHUB_REF}" == "refs/heads/main" ] && [ "${NO_DEPLOY}" == "no" ]; then
          docker tag minio docker.pkg.github.com/cloudwebmanage/cwm-worker-deployment-minio/minio:latest &&\
          docker tag nginx docker.pkg.github.com/cloudwebmanage/cwm-worker-deployment-minio/minio-nginx:latest &&\
          docker push docker.pkg.github.com/cloudwebmanage/cwm-worker-deployment-minio/minio:latest &&\
          docker push docker.pkg.github.com/cloudwebmanage/cwm-worker-deployment-minio/minio-nginx:latest &&\
          echo "${CWM_WORKER_HELM_DEPLOY_KEY}" > cwm_worker_helm_deploy_key &&\
          chmod 400 cwm_worker_helm_deploy_key &&\
          export GIT_SSH_COMMAND="ssh -i $(pwd)/cwm_worker_helm_deploy_key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" &&\
          git clone git@github.com:CloudWebManage/cwm-worker-helm.git &&\
          git config --global user.name "cwm-worker-deployment-minio CI" &&\
          git config --global user.email "cwm-worker-deployment-minio-ci@localhost" &&\
          mkdir -p cwm-worker-helm/cwm-worker-deployment-minio &&\
          helm package ./helm --version "0.0.0-$(date +%Y%m%dT%H%M%S)" --destination ./cwm-worker-helm/cwm-worker-deployment-minio &&\
          helm repo index --url "https://raw.githubusercontent.com/CloudWebManage/cwm-worker-helm/master/cwm-worker-deployment-minio/" ./cwm-worker-helm/cwm-worker-deployment-minio &&\
          cd cwm-worker-helm &&\
          git add cwm-worker-deployment-minio &&\
          git commit -m "automatic update of cwm-worker-deployment-minio" &&\
          git push origin master
        fi

    - uses: 8398a7/action-slack@v3
      if: github.ref == 'refs/heads/main'
      with:
        status: ${{ job.status }}
        author_name: ${{ github.actor }}
        fields: all
        if_mention: success,failure
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
